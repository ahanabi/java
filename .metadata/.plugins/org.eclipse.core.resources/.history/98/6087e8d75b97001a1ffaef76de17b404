package GuessNumberGame;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;//监听鼠标
import java.awt.event.KeyEvent;
import java.awt.event.KeyAdapter;//监听键盘
import java.util.Random;//导入随机数这个类

import javax.swing.JButton;//添加按钮
import javax.swing.JLabel;//添加显示框（游戏规则）
import javax.swing.JOptionPane;//添加选项框
import javax.swing.JTextField;//添加可输入文本框
import javax.swing.WindowConstants;//创建Windows窗体

public class GuessNumber extends javax.swing.JFrame {

  
	private JLabel JL;
	private JTextField TF;
	private JButton B1;
	private JButton B2;
	private int suijishu;
	private int jishu;
	long ST = System.currentTimeMillis();
	long ET;
	
	public static void main(String[] args){
        GuessNumber inst = new GuessNumber();//创建窗体
        inst.setVisible(true);//显示窗口（可视化）
	}
	/**
	*新建一个随机数产生器，然后生成一个1到100之间的整数
	*/
	public GuessNumber(){
		super();//创建一个开始看不到的框架
		initGUI();
		Random random = new Random();//出随机数
		suijishu = random.nextInt(100);//产生1~100随机整数
	}
	/**
	*初始化窗口组件
	*/
	private void initGUI(){
		try{
			setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
			//窗口关闭时销毁窗口
			getContentPane().setLayout(null);//设置窗口布局为绝对布局
			/**
			*绘制标签
			*/
			
			/**
			*绘制文本框
			*/
			{
				TF = new JTextField();//文本框
				getContentPane().add(TF);
				TF.setBounds(42, 168, 112, 28);//设置文本框位置和大小
				TF.addKeyListener(new KeyAdapter(){
					public void keyPressed(KeyEvent evt){
						jTextField1KeyPressed(evt);//监听回车键并执行相应操作
					}
				});
			}
			
			{
				JL = new JLabel();
				getContentPane().add(JL);
			    JL.setText("<html>欢迎进入猜数字游戏，游戏规则如下：<br>"+"游戏随机产生1-100的整数，玩家通过输入数字来匹配所产生的数字。<br>"+"我心里有一个1到100的整数，你猜是什么？<ml>");//标题
			    JL.setBounds(10, 0, 420, 140);//设置布局和大小
			}		
			{
		        B2 = new JButton();//按钮2
		        getContentPane().add(B2);
		        B2.setText("重新开始");
		        B2.setBounds(280, 168, 100, 30);//按钮2设置布局和大小
		        B2.addActionListener(new ActionListener(){//将按钮2插入监听
			        public void actionPerformed(ActionEvent evt){
				        jButton2ActionPerformed(evt);
			        }
		        });
			}
			
			{
				B1 = new JButton();//按钮1
				getContentPane().add(B1);
				B1.setText("确定");//按钮1显示
				B1.setBounds(182, 168, 77, 30);//按钮1设置布局和大小
				B1.addActionListener(new ActionListener(){//将按钮1插入监听鼠标左键
					public void actionPerformed(ActionEvent evt){
						jButton1ActionPerformed(evt);
					}
				});
			}
			
	pack();
	this.setSize(442, 265);
	setLocationRelativeTo(null);
    } catch (Exception e){
	e.printStackTrace();//设置鼠标可以动
    }	
    }

    private void jButton1ActionPerformed(ActionEvent evt){
    	int guess = 0;
    		jishu++;
    	try{
    		guess=Integer.parseInt(TF.getText());//把输入的内容转换成整数
    	}catch(Exception e){//抛出异常
    		JOptionPane.showMessageDialog(null, "数字不合法,请输入1-100的整数");//弹出对话框 使信息位于居中位置
    		TF.setText("");//清空
    		TF.requestFocus();//把输入焦点放在调用这个方法的控件上
    		return;
    	}

    	if(guess>suijishu){
    		JOptionPane.showMessageDialog(null, "输入的大了");
    		TF.setText("");
    		TF.requestFocus();//把输入焦点放在调用这个方法的控件上
    		return;
    	}
    	if(guess<suijishu){
    		JOptionPane.showMessageDialog(null, "输入的小了");
    		TF.setText("");
    		TF.requestFocus();//把输入焦点放在调用这个方法的控件上
    		return;
    	}
    	
    	if(guess>100){
    		JOptionPane.showMessageDialog(null, "输入不在范围，请重新输入");
    		TF.setText("");
    		TF.requestFocus();//把输入焦点放在调用这个方法的控件上
    		return;
    	}
    	if(guess<1){
    		JOptionPane.showMessageDialog(null, "输入不在范围，请重新输入");
    		TF.setText("");
    		TF.requestFocus();//把输入焦点放在调用这个方法的控件上。
    		return;
    	}
    	
    	if(guess == suijishu){
    		ET=System.currentTimeMillis();
    		switch(jishu){
    		case 1:JOptionPane.showMessageDialog(null, "牛");
    		break;
    		case 2:
    		case 3:
    		case 4:
    		case 5:
    		case 6:
    		case 7:JOptionPane.showMessageDialog(null, "你很smart");
    		break;
    		default:JOptionPane.showMessageDialog(null, "猜了挺久，你需要努力");
    		break;
    		}
    		JOptionPane.showMessageDialog(null, "您总共猜了"+jishu+"次，共花了"+(ET-ST)/1000+"秒的时间答对正确答案");
    	}
    	TF.setText("");
    	TF.requestFocus();//把输入焦点放在调用这个方法的控件上
    }
    //显示猜测结果并清空文本框
    private void jButton2ActionPerformed(ActionEvent evt){//重新开始
    	Random random = new Random();//重新生成随机数
    	suijishu = random.nextInt(100);//随机数范围：1~100的整数
    	jishu = 0;// 记录玩家猜测的次数
    	TF.setText("");
    	ST = System.currentTimeMillis();
    }
    
    private void jTextField1KeyPressed(KeyEvent evt){// 监听文本框回车
    	if (evt.getKeyCode()==KeyEvent.VK_ENTER){
    		B1.doClick();// 文本框按回车键 执行“确定”按钮的事件
    	}
    }
}
}